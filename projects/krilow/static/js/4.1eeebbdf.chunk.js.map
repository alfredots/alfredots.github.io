{"version":3,"sources":["services/instagramFetch.js","components/PhotoItem/index.js","components/Home/index.js"],"names":["instagramRegExp","RegExp","fetchInstagramPhotos","accountUrl","a","async","axios","get","response","console","log","json","JSON","parse","data","match","edges","entry_data","ProfilePage","graphql","user","edge_owner_to_timeline_media","splice","photos","map","node","url","shortcode","thumbnailUrl","thumbnail_src","displayUrl","display_url","caption","edge_media_to_caption","text","styles","makeStyles","theme","root","maxHeight","width","img","imgModal","props","id","classes","useState","animate","setAnimate","React","open","setOpen","onChange","isVisible","partialVisibility","offset","top","bottom","left","when","onClick","src","className","alt","Modal","aria-labelledby","aria-describedby","onClose","Box","height","display","alignItems","justifyContent","getModalStyle","transform","flexWrap","overflow","gridList","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","setPhotos","isLoaded","setLoaded","cols","setCols","username","setUser","modalStyle","handleClose","useEffect","changeColumns","window","innerWidth","breakpoints","values","sm","md","onresize","error","Bar","handleOpen","marginTop","GridList","cellHeight","tile","index","GridListTile","key","PhotoItem","style","TextField","e","target","value","Button","variant","color"],"mappings":"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","file":"static/js/4.1eeebbdf.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst instagramRegExp = new RegExp(/<script type=\"text\\/javascript\">window\\._sharedData = (.*);<\\/script>/)\r\n \r\n\r\nexport const fetchInstagramPhotos = async (accountUrl) => {\r\n\r\n    \r\n    const response = await axios.get(accountUrl)\r\n    console.log(response)\r\n    const json = JSON.parse(response.data.match(instagramRegExp)[1])\r\n    const edges = json.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges.splice(0, 9)\r\n    const photos = edges.map(({ node }) => {\r\n        return {\r\n            url: `https://www.instagram.com/p/${node.shortcode}/`,\r\n            thumbnailUrl: node.thumbnail_src,\r\n            displayUrl: node.display_url,\r\n            caption: node.edge_media_to_caption.edges[0].node.text\r\n        }\r\n    })\r\n\r\n    return photos\r\n}\r\n  ","import React, { useState } from 'react'\r\nimport Fade from 'react-reveal'\r\nimport Modal from '@material-ui/core/Modal'\r\n\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nimport VisibilitySensor from 'react-visibility-sensor'\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport { Box } from '@material-ui/core'\r\n\r\nconst styles = makeStyles(theme => ({\r\n    \r\n    root: {\r\n        maxHeight: 230,\r\n        width: \"100%\",\r\n    },\r\n    img : {\r\n        width: \"100%\"\r\n    },\r\n    imgModal : {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nexport default function(props) {\r\n    const {caption, displayUrl, id} = props\r\n    const classes = styles()\r\n    const [ animate, setAnimate ] = useState(false)\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    function changeHandler(isVisible) {\r\n        setAnimate(isVisible)\r\n        \r\n        if(animate){\r\n            console.log(`notVisible ${id}`)\r\n        }else{\r\n            console.log(`isVisible ${id}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n            <>\r\n                <VisibilitySensor onChange={changeHandler}\r\n                    partialVisibility={true}\r\n                    offset={{top:100, bottom:100}}\r\n                >\r\n                    <Fade left when={animate}>\r\n                        <img onClick={() => setOpen(true)} src={displayUrl} className={classes.img} alt={caption} />\r\n                    </Fade>\r\n                </VisibilitySensor>\r\n                <Modal\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={open}\r\n                    onClose={() => setOpen(false)}\r\n                    onClick={() => setOpen(false)}\r\n                >\r\n                    <Box height={1} width={1} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" >\r\n                        <TransformWrapper>\r\n                            <TransformComponent>\r\n                                <Fade>\r\n                                    <img src={displayUrl} className={classes.imgModal} alt={caption} />\r\n                                </Fade>\r\n                            </TransformComponent>\r\n                        </TransformWrapper>\r\n                    </Box>\r\n                </Modal>\r\n            </>\r\n            \r\n    )\r\n}\r\n\r\n/**\r\n * <GridList cellHeight={220} className={classes.gridList} cols={cols}>\r\n        {photos.map((tile, index) => (\r\n            <GridListTile id={id+\"-GridList\"} key={id} className={classes.root} cols={1}>\r\n                <VisibilitySensor onChange={changeHandler} partialVisibility={true} offset={{top:100}}>\r\n                    <Fade left when={animate}>\r\n                        <img src={displayUrl} className={classes.img} alt={caption} />\r\n                    </Fade>\r\n                </VisibilitySensor>\r\n            </GridListTile>\r\n        ))}\r\n    </GridList>\r\n */","import React, { useEffect, useState } from 'react'\r\nimport { Box, TextField, Button } from '@material-ui/core'\r\nimport { fetchInstagramPhotos } from '../../services/instagramFetch'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport Bar from '../Bar'\r\nimport GridListTile from '@material-ui/core/GridListTile'\r\nimport GridList from '@material-ui/core/GridList'\r\nimport theme from '../../theme'\r\nimport PhotoItem from '../PhotoItem'\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst styles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n    },\r\n    gridList: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    }\r\n}));\r\n\r\nexport default function () {\r\n    const classes = styles()\r\n    const [photos, setPhotos ] = useState([])\r\n    const [isLoaded, setLoaded] = useState(false)\r\n    const [cols, setCols] = useState(1)\r\n    const [username, setUser] = useState('')\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const searchUser = async () => {\r\n        try{\r\n            console.log(username)\r\n            setPhotos(await fetchInstagramPhotos(`https://www.instagram.com/${username}`))\r\n            setLoaded(true)\r\n            handleClose()\r\n        } catch(e) {\r\n            console.error('Fetching Instagram photos failed', e)\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const changeColumns = () => {\r\n            let width = window.innerWidth\r\n            console.log(width)\r\n            if(theme.breakpoints.values.sm < width)\r\n                setCols(2)\r\n            if(theme.breakpoints.values.md < width)\r\n                setCols(3)\r\n        }\r\n        window.onresize = changeColumns\r\n        changeColumns()\r\n    }, [])\r\n    \r\n\r\n    useEffect(() => {\r\n        async function loadPhotos() {\r\n            try{\r\n                setPhotos(await fetchInstagramPhotos(\"https://www.instagram.com/krilow_wallpapers\"))\r\n                setLoaded(true)\r\n            } catch(e) {\r\n                console.error('Fetching Instagram photos failed', e)\r\n            }\r\n        }\r\n        loadPhotos()\r\n    }, [])\r\n\r\n    if(isLoaded){\r\n        return (\r\n            <>\r\n                <Bar handleOpen={handleOpen}/>\r\n                <Box id=\"caixa-principal\" width={1} marginTop={4} className={classes.root}>\r\n                    <GridList cellHeight={220} className={classes.gridList} cols={cols}>\r\n                        {photos.map((tile, index) => (\r\n                           <GridListTile id={index+\"-GridList\"} key={index} className={classes.root} cols={1}>\r\n                                <PhotoItem id={index} {...tile}/>\r\n                            </GridListTile>\r\n                        ))}\r\n                    </GridList>\r\n                </Box> \r\n                <Modal\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    <div style={modalStyle} className={classes.paper}>\r\n                        <h2 id=\"simple-modal-title\">Pesquise seu usuário</h2>\r\n                        <p id=\"simple-modal-description\">\r\n                            Caso seu instagram seja fechado não será possível realizar esta função.\r\n                        </p>\r\n                        <TextField onChange={e => setUser(e.target.value)}></TextField>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => searchUser()}>Pesquisar</Button>\r\n                    </div>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }else{\r\n        return(\r\n            <div>carregando...</div>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}