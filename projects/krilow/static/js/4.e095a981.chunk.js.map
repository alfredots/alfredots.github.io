{"version":3,"sources":["services/instagramFetch.js","components/PhotoItem/index.js","components/Home/index.js"],"names":["instagramRegExp","RegExp","fetchInstagramPhotos","accountUrl","a","async","axios","get","response","json","JSON","parse","data","match","edges","entry_data","ProfilePage","graphql","user","edge_owner_to_timeline_media","splice","photos","map","node","url","shortcode","thumbnailUrl","thumbnail_src","displayUrl","display_url","caption","edge_media_to_caption","text","styles","makeStyles","theme","root","maxHeight","width","img","imgModal","props","id","classes","useState","animate","setAnimate","React","open","setOpen","onChange","isVisible","console","log","partialVisibility","offset","top","bottom","left","when","onClick","src","className","alt","Modal","aria-labelledby","aria-describedby","onClose","Box","height","display","alignItems","justifyContent","flexWrap","overflow","gridList","setPhotos","isLoaded","setLoaded","cols","setCols","useEffect","changeColumns","window","innerWidth","breakpoints","values","sm","md","onresize","error","marginTop","GridList","cellHeight","tile","index","GridListTile","key","PhotoItem"],"mappings":"oMAEMA,EAAkB,IAAIC,OAAO,yEAEtBC,EAAuB,SAAOC,GAAP,qBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACTE,IAAMC,IAAIJ,IADD,cAC1BK,EAD0B,OAE1BC,EAAOC,KAAKC,MAAMH,EAASI,KAAKC,MAAMb,GAAiB,IACvDc,EAAQL,EAAKM,WAAWC,YAAY,GAAGC,QAAQC,KAAKC,6BAA6BL,MAAMM,OAAO,EAAG,GACjGC,EAASP,EAAMQ,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACxB,MAAO,CACHC,IAAI,+BAAD,OAAiCD,EAAKE,UAAtC,KACHC,aAAcH,EAAKI,cACnBC,WAAYL,EAAKM,YACjBC,QAASP,EAAKQ,sBAAsBjB,MAAM,GAAGS,KAAKS,SAT1B,kBAazBX,GAbyB,sC,wFCM9BY,EAASC,aAAW,SAAAC,GAAK,MAAK,CAEhCC,KAAM,CACFC,UAAW,IACXC,MAAO,QAEXC,IAAM,CACFD,MAAO,QAEXE,SAAW,CACPF,MAAO,YAIA,WAASG,GAAQ,IACrBX,EAA2BW,EAA3BX,QAASF,EAAkBa,EAAlBb,WAAYc,EAAMD,EAANC,GACtBC,EAAUV,IAFW,EAGKW,oBAAS,GAHd,mBAGnBC,EAHmB,KAGVC,EAHU,OAIHC,IAAMH,UAAS,GAJZ,mBAIpBI,EAJoB,KAIdC,EAJc,KAgB3B,OACQ,oCACI,kBAAC,IAAD,CAAkBC,SAZ9B,SAAuBC,GACnBL,EAAWK,GAERN,EACCO,QAAQC,IAAR,qBAA0BX,IAE1BU,QAAQC,IAAR,oBAAyBX,KAOjBY,mBAAmB,EACnBC,OAAQ,CAACC,IAAI,IAAKC,OAAO,MAEzB,kBAAC,IAAD,CAAMC,MAAI,EAACC,KAAMd,GACb,yBAAKe,QAAS,kBAAMX,GAAQ,IAAOY,IAAKjC,EAAYkC,UAAWnB,EAAQJ,IAAKwB,IAAKjC,MAGzF,kBAACkC,EAAA,EAAD,CACIC,kBAAgB,qBAChBC,mBAAiB,2BACjBlB,KAAMA,EACNmB,QAAS,kBAAMlB,GAAQ,IACvBW,QAAS,kBAAMX,GAAQ,KAEvB,kBAACmB,EAAA,EAAD,CAAKC,OAAQ,EAAG/B,MAAO,EAAGgC,QAAQ,OAAOC,WAAW,SAASC,eAAe,UACxE,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,yBAAKX,IAAKjC,EAAYkC,UAAWnB,EAAQH,SAAUuB,IAAKjC,WCnDtFG,EAASC,aAAW,SAAAC,GAAK,MAAK,CAChCC,KAAM,CACJkC,QAAS,OACTG,SAAU,OACVD,eAAgB,eAChBE,SAAU,UAEZC,SAAU,CACRrC,MAAO,OACP+B,OAAQ,YAIC,qBACX,IAAM1B,EAAUV,IADO,EAEMW,mBAAS,IAFf,mBAEhBvB,EAFgB,KAERuD,EAFQ,OAGOhC,oBAAS,GAHhB,mBAGhBiC,EAHgB,KAGNC,EAHM,OAIClC,mBAAS,GAJV,mBAIhBmC,EAJgB,KAIVC,EAJU,KAgCvB,OA1BAC,qBAAU,WACN,IAAMC,EAAgB,WAClB,IAAI5C,EAAQ6C,OAAOC,WACnBhC,QAAQC,IAAIf,GACTH,IAAMkD,YAAYC,OAAOC,GAAKjD,GAC7B0C,EAAQ,GACT7C,IAAMkD,YAAYC,OAAOE,GAAKlD,GAC7B0C,EAAQ,IAEhBG,OAAOM,SAAWP,EAClBA,MACD,IAGHD,qBAAU,WACN,EAAA7E,EAAAC,OAAA,qEAEQuE,EAFR,WAAAxE,EAAA,MAEwBF,EAAqB,gDAF7C,kCAGQ4E,GAAU,GAHlB,gDAKQ1B,QAAQsC,MAAM,mCAAd,MALR,0DASD,IAEAb,EAEK,oCACI,kBAACT,EAAA,EAAD,CAAK1B,GAAG,kBAAkBJ,MAAO,EAAGqD,UAAW,EAAG7B,UAAWnB,EAAQP,MACjE,kBAACwD,EAAA,EAAD,CAAUC,WAAY,IAAK/B,UAAWnB,EAAQgC,SAAUI,KAAMA,GACzD1D,EAAOC,KAAI,SAACwE,EAAMC,GAAP,OACT,kBAACC,EAAA,EAAD,CAActD,GAAIqD,EAAM,YAAaE,IAAKF,EAAOjC,UAAWnB,EAAQP,KAAM2C,KAAM,GAC3E,kBAACmB,EAAD,eAAWxD,GAAIqD,GAAWD,WAU9C","file":"static/js/4.e095a981.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst instagramRegExp = new RegExp(/<script type=\"text\\/javascript\">window\\._sharedData = (.*);<\\/script>/)\r\n\r\nexport const fetchInstagramPhotos = async (accountUrl) => {\r\n    const response = await axios.get(accountUrl)\r\n    const json = JSON.parse(response.data.match(instagramRegExp)[1])\r\n    const edges = json.entry_data.ProfilePage[0].graphql.user.edge_owner_to_timeline_media.edges.splice(0, 8)\r\n    const photos = edges.map(({ node }) => {\r\n        return {\r\n            url: `https://www.instagram.com/p/${node.shortcode}/`,\r\n            thumbnailUrl: node.thumbnail_src,\r\n            displayUrl: node.display_url,\r\n            caption: node.edge_media_to_caption.edges[0].node.text\r\n        }\r\n    })\r\n\r\n    return photos\r\n}\r\n  ","import React, { useState } from 'react'\r\nimport Fade from 'react-reveal'\r\nimport Modal from '@material-ui/core/Modal'\r\n\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nimport VisibilitySensor from 'react-visibility-sensor'\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport { Box } from '@material-ui/core'\r\n\r\nconst styles = makeStyles(theme => ({\r\n    \r\n    root: {\r\n        maxHeight: 230,\r\n        width: \"100%\",\r\n    },\r\n    img : {\r\n        width: \"100%\"\r\n    },\r\n    imgModal : {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nexport default function(props) {\r\n    const {caption, displayUrl, id} = props\r\n    const classes = styles()\r\n    const [ animate, setAnimate ] = useState(false)\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    function changeHandler(isVisible) {\r\n        setAnimate(isVisible)\r\n        \r\n        if(animate){\r\n            console.log(`notVisible ${id}`)\r\n        }else{\r\n            console.log(`isVisible ${id}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n            <>\r\n                <VisibilitySensor onChange={changeHandler}\r\n                    partialVisibility={true}\r\n                    offset={{top:100, bottom:100}}\r\n                >\r\n                    <Fade left when={animate}>\r\n                        <img onClick={() => setOpen(true)} src={displayUrl} className={classes.img} alt={caption} />\r\n                    </Fade>\r\n                </VisibilitySensor>\r\n                <Modal\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={open}\r\n                    onClose={() => setOpen(false)}\r\n                    onClick={() => setOpen(false)}\r\n                >\r\n                    <Box height={1} width={1} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" >\r\n                        <TransformWrapper>\r\n                            <TransformComponent>\r\n                                <Fade>\r\n                                    <img src={displayUrl} className={classes.imgModal} alt={caption} />\r\n                                </Fade>\r\n                            </TransformComponent>\r\n                        </TransformWrapper>\r\n                    </Box>\r\n                </Modal>\r\n            </>\r\n            \r\n    )\r\n}\r\n\r\n/**\r\n * <GridList cellHeight={220} className={classes.gridList} cols={cols}>\r\n        {photos.map((tile, index) => (\r\n            <GridListTile id={id+\"-GridList\"} key={id} className={classes.root} cols={1}>\r\n                <VisibilitySensor onChange={changeHandler} partialVisibility={true} offset={{top:100}}>\r\n                    <Fade left when={animate}>\r\n                        <img src={displayUrl} className={classes.img} alt={caption} />\r\n                    </Fade>\r\n                </VisibilitySensor>\r\n            </GridListTile>\r\n        ))}\r\n    </GridList>\r\n */","import React, { useEffect, useState } from 'react'\r\nimport { Box } from '@material-ui/core'\r\nimport { fetchInstagramPhotos } from '../../services/instagramFetch'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nimport GridListTile from '@material-ui/core/GridListTile'\r\nimport GridList from '@material-ui/core/GridList'\r\nimport theme from '../../theme'\r\nimport PhotoItem from '../PhotoItem'\r\n\r\nconst styles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n    },\r\n    gridList: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    }\r\n}));\r\n\r\nexport default function () {\r\n    const classes = styles()\r\n    const [photos, setPhotos ] = useState([])\r\n    const [isLoaded, setLoaded] = useState(false)\r\n    const [cols, setCols] = useState(1)\r\n\r\n    useEffect(() => {\r\n        const changeColumns = () => {\r\n            let width = window.innerWidth\r\n            console.log(width)\r\n            if(theme.breakpoints.values.sm < width)\r\n                setCols(2)\r\n            if(theme.breakpoints.values.md < width)\r\n                setCols(3)\r\n        }\r\n        window.onresize = changeColumns\r\n        changeColumns()\r\n    }, [])\r\n    \r\n\r\n    useEffect(() => {\r\n        async function loadPhotos() {\r\n            try{\r\n                setPhotos(await fetchInstagramPhotos(\"https://www.instagram.com/krilow_wallpapers\"))\r\n                setLoaded(true)\r\n            } catch(e) {\r\n                console.error('Fetching Instagram photos failed', e)\r\n            }\r\n        }\r\n        loadPhotos()\r\n    }, [])\r\n\r\n    if(isLoaded){\r\n        return (\r\n            <>\r\n                <Box id=\"caixa-principal\" width={1} marginTop={4} className={classes.root}>\r\n                    <GridList cellHeight={220} className={classes.gridList} cols={cols}>\r\n                        {photos.map((tile, index) => (\r\n                           <GridListTile id={index+\"-GridList\"} key={index} className={classes.root} cols={1}>\r\n                                <PhotoItem id={index} {...tile}/>\r\n                            </GridListTile>\r\n                        ))}\r\n                    </GridList>\r\n                </Box> \r\n                \r\n            </>\r\n        )\r\n    }else{\r\n        return(\r\n            <div>carregando...</div>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}