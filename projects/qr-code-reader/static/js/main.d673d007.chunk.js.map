{"version":3,"sources":["components/AppBar.js","controllers/PhotoController.js","controllers/ReportController.js","controllers/ZipController.js","components/DataContext.js","layout/Forms.js","layout/ProgressBar.js","layout/Tables.js","App.js","serviceWorker.js","index.js"],"names":["AppBar","position","Toolbar","Typography","variant","createData","name","link","data","imgUrl","process","timestamp","Date","getTime","readFileAsync","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsDataURL","convertFile","a","options","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","img","Image","src","URL","createObjectURL","console","log","getQRCode","imageData","BrowserQRCodeReader","decodeFromImageUrl","text","mountJSON","links","d","push","nome","generateCSV","json2csv","err","csv","document","createElement","setAttribute","encodeURIComponent","today","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","hour","getHours","minutes","getMinutes","seconds","getSeconds","body","appendChild","click","error","zipPhotos","zipName","datas","processValue","zip","JSZip","b64","index","indexOf","substring","length","base64","generateAsync","type","then","content","saveAs","DataContext","createContext","useStyles","makeStyles","root","height","createFormContainer","Grid","item","xs","container","justify","alignItems","chunkedArray","array","i","j","temparray","newArrays","slice","classes","useContext","setData","setProgress","setStatus","useState","reportStatus","setReportStatus","onChangeHandler","e","target","files","tempArray","chunkedFiles","Array","from","fileProcessed","separatedFiles","onClickReportHandler","onClickRejectHandler","onClickDetectedHandler","className","Button","color","component","id","hidden","multiple","onChange","disabled","onClick","theme","width","marginLeft","spacing","marginBottom","progress","status","setText","LinearProgress","value","paper","table","overflowX","tableLayout","tableCell","wordBreak","TableContainer","Paper","elevation","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","App","Box","style","backgroundColor","Provider","Forms","ProgressBar","Tables","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","href","origin","addEventListener","fetch","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d673d007.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport { Toolbar, Typography } from '@material-ui/core';\n\nexport default function () {\n  return (\n    <AppBar position='static'>\n      <Toolbar>\n        <Typography variant='h6'>Leitor de QR Codes</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import imageCompression from 'browser-image-compression';\nimport { BrowserQRCodeReader } from '@zxing/library';\n\nfunction createData(name, link = '', data, imgUrl, process = false) {\n  return { name, link, data, imgUrl, process, timestamp: new Date().getTime() };\n}\n\nfunction readFileAsync(file) {\n  return new Promise((resolve, reject) => {\n    let reader = new FileReader();\n\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n\n    reader.onerror = reject;\n\n    reader.readAsDataURL(file);\n  });\n}\n\nexport async function convertFile(file) {\n  try {\n    const options = {\n      maxSizeMB: 1,\n      maxWidthOrHeight: 1024,\n      useWebWorker: true,\n    };\n    const compressedFile = await imageCompression(file, options);\n    let img = new Image();\n    img.src = URL.createObjectURL(compressedFile);\n    //montar data\n    const data = await readFileAsync(compressedFile);\n    //\n    return createData(file.name, '', data, img);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getQRCode(imageData) {\n  const reader = new BrowserQRCodeReader();\n  try {\n    return await (await reader.decodeFromImageUrl(imageData.imgUrl.src)).text;\n  } catch (error) {\n    console.log(error);\n  }\n  return 'Não detectado';\n}\n","import { json2csv } from 'json-2-csv';\n\nexport function mountJSON(data) {\n  const links = [];\n  for (let d of data) {\n    if (d.process) {\n      links.push({\n        link: d.link,\n        nome: d.name,\n        data: d.timestamp,\n      });\n    }\n  }\n  return links;\n}\n\nfunction downloadFile(fileName, urlData) {\n  var aLink = document.createElement('a');\n  var evt = document.createEvent('HTMLEvents');\n  evt.initEvent('click');\n  aLink.download = fileName;\n  aLink.href = urlData;\n  window.location.href = urlData;\n  aLink.dispatchEvent(evt);\n}\n\nexport async function generateCSV(data) {\n  try {\n    json2csv(data, (err, csv) => {\n      console.log(csv);\n      var link = document.createElement('a');\n      link.setAttribute(\n        'href',\n        'data:text/csv;charset=UTF-8,' + encodeURIComponent(csv),\n      );\n      //\n      var today = new Date();\n      var dd = String(today.getDate()).padStart(2, '0');\n      var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n      var yyyy = today.getFullYear();\n      var hour = String(today.getHours());\n      var minutes = String(today.getMinutes());\n      var seconds = String(today.getSeconds());\n\n      today =\n        dd + '-' + mm + '-' + yyyy + '-' + hour + ':' + minutes + ':' + seconds;\n      //\n      link.setAttribute('download', `relatorio-${today}.csv`);\n      document.body.appendChild(link);\n\n      link.click();\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\n\nexport function zipPhotos(zipName, datas, processValue) {\n  const zip = new JSZip();\n\n  for (let d of datas) {\n    if (d.process === processValue) {\n      let b64 = d.data;\n      let index = b64.indexOf(',');\n      if (index !== -1) {\n        b64 = b64.substring(index + 1, b64.length);\n      }\n      zip.file(d.name, b64, { base64: true });\n    }\n  }\n\n  zip.generateAsync({ type: 'blob' }).then(function (content) {\n    console.log(content);\n    // see FileSaver.js\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = today.getFullYear();\n    var hour = String(today.getHours());\n    var minutes = String(today.getMinutes());\n    var seconds = String(today.getSeconds());\n\n    today =\n      dd + '-' + mm + '-' + yyyy + '-' + hour + ':' + minutes + ':' + seconds;\n    saveAs(content, `${zipName}-${today}.zip`);\n  });\n}\n","import { createContext } from 'react';\n\nconst DataContext = createContext();\n\nexport default DataContext;\n","import React, { useContext, useState } from 'react';\nimport { Button, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getQRCode, convertFile } from '../controllers/PhotoController';\nimport { mountJSON, generateCSV } from '../controllers/ReportController';\nimport { zipPhotos } from '../controllers/ZipController';\nimport DataContext from '../components/DataContext';\nimport { BrowserQRCodeReader } from '@zxing/library';\n\nconst useStyles = makeStyles({\n  root: {\n    height: '20%',\n  },\n});\n\nfunction createFormContainer(content) {\n  return (\n    <Grid item xs={3} container justify='center' alignItems='center'>\n      {content}\n    </Grid>\n  );\n}\n\nfunction chunkedArray(array) {\n  var newArrays = [];\n  var i,\n    j,\n    temparray,\n    chunk = 10;\n  for (i = 0, j = array.length; i < j; i += chunk) {\n    temparray = array.slice(i, i + chunk);\n    newArrays.push(temparray);\n  }\n  return newArrays;\n}\n\nexport default function ({ data }) {\n  const classes = useStyles();\n  const { setData, setProgress, setStatus } = useContext(DataContext);\n  const [reportStatus, setReportStatus] = useState(true);\n\n  const onChangeHandler = async (e) => {\n    if (e.target.files.length > 0 && e.target.files.length <= 1000) {\n      const files = e.target.files;\n      console.log(files);\n      const tempArray = [];\n      const chunkedFiles = chunkedArray(Array.from(files));\n      let fileProcessed = 0;\n      for (let separatedFiles of chunkedFiles) {\n        console.log('iniciando array');\n        for (let file of separatedFiles) {\n          //convert file\n          console.log('convertendo arquivo...');\n          let imageData = await convertFile(file);\n          //\n          console.log('detectando qr code...');\n          imageData.link = await getQRCode(imageData);\n          //\n          if (imageData.link !== 'Não detectado') {\n            imageData.process = true;\n          }\n          //\n          console.log('salvando dado...');\n          tempArray.push(imageData);\n          fileProcessed++;\n          setProgress((fileProcessed / files.length) * 100);\n        }\n        console.log('finalizando array...');\n      }\n      setData(tempArray);\n      setReportStatus(false);\n    } else if (e.target.files.length >= 60) {\n      setStatus('Erro - ultrapassou máximo de fotos');\n    } else {\n      setStatus('Erro - nenhuma foto informada');\n    }\n  };\n\n  const onClickReportHandler = async (e) => {\n    try {\n      if (data.length > 0) {\n        const jsonData = mountJSON(data);\n        generateCSV(jsonData);\n      } else {\n        console.log('data vazio');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onClickRejectHandler = async (e) => {\n    try {\n      if (data.length > 0) {\n        zipPhotos('fotos-nao-detectadas', data, false);\n      } else {\n        console.log('data vazio');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onClickDetectedHandler = async (e) => {\n    try {\n      if (data.length > 0) {\n        zipPhotos('fotos-detectadas', data, true);\n      } else {\n        console.log('data vazio');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Grid container className={classes.root}>\n      {createFormContainer(\n        <Button variant='contained' color='primary' component='label'>\n          Buscar imagens\n          <input\n            id='file-input'\n            type='file'\n            hidden\n            multiple\n            onChange={(e) => onChangeHandler(e)}\n          />\n        </Button>,\n      )}\n      {createFormContainer(\n        <Button\n          variant='contained'\n          color='primary'\n          disabled={reportStatus}\n          onClick={(e) => onClickDetectedHandler(e)}\n        >\n          Fotos detectadas\n        </Button>,\n      )}\n      {createFormContainer(\n        <Button\n          variant='contained'\n          color='primary'\n          disabled={reportStatus}\n          onClick={(e) => onClickRejectHandler(e)}\n        >\n          Fotos não detectadas\n        </Button>,\n      )}\n      {createFormContainer(\n        <Button\n          variant='contained'\n          color='primary'\n          disabled={reportStatus}\n          onClick={(e) => onClickReportHandler(e)}\n        >\n          Baixar relatório\n        </Button>,\n      )}\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: '8%',\n    marginLeft: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  text: {\n    width: '35rem',\n  },\n}));\n\nfunction setText(status) {\n  if (status === 'inicio') return 'Progresso da detecção do QR code';\n  else if (status === 'detectando links') return 'Detectando links...';\n  else if (status === 'Erro - nenhuma foto informada')\n    return status + '. Por favor indique as  imagens desejadas.';\n  else if (status === 'Erro - ultrapassou máximo de fotos')\n    return status + '. Por favor informe no máximo 60 fotos.';\n  else return 'Finalizado processo detecção';\n}\n\nexport default function ({ progress, status }) {\n  const classes = useStyles();\n  return (\n    <Grid\n      className={classes.root}\n      container\n      justify='center'\n      alignItems='center'\n      xs={6}\n    >\n      <Grid item xs={10}>\n        <Typography className={classes.text}>{setText(status)}</Typography>\n      </Grid>\n      <Grid item xs={10}>\n        <LinearProgress variant='determinate' value={progress} />\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  paper: {\n    width: '90%',\n    height: '55vh',\n  },\n  table: {\n    width: '100%',\n    overflowX: 'hidden',\n    tableLayout: 'fixed',\n  },\n  tableCell: {\n    wordBreak: 'break-all',\n  },\n});\n\nexport default function ({ data }) {\n  const classes = useStyles();\n\n  return (\n    <Grid container justify='center' alignItems='center'>\n      <TableContainer component={Paper} className={classes.paper} elevation={3}>\n        <Table className={classes.table} aria-label='simple table'>\n          <TableHead>\n            <TableRow>\n              <TableCell className={classes.tableCell}>Id</TableCell>\n              <TableCell className={classes.tableCell}>\n                Nome do Arquivo\n              </TableCell>\n              <TableCell align='center'>Link encontrado</TableCell>\n              <TableCell align='center'>Processado</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row, index) => (\n              <TableRow key={row.name}>\n                <TableCell\n                  component='th'\n                  scope='row'\n                  className={classes.tableCell}\n                >\n                  {index + 1}\n                </TableCell>\n                <TableCell\n                  component='th'\n                  scope='row'\n                  className={classes.tableCell}\n                >\n                  {row.name}\n                </TableCell>\n                <TableCell align='center' className={classes.tableCell}>\n                  {row.link}\n                </TableCell>\n                <TableCell align='center' className={classes.tableCell}>\n                  {row.process ? 'detectado' : 'não detectado'}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Grid>\n  );\n}\n","import React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport AppBar from './components/AppBar';\nimport Forms from './layout/Forms';\nimport ProgressBar from './layout/ProgressBar';\nimport Tables from './layout/Tables';\nimport DataContext from './components/DataContext';\n/**\n * Component for showing details of the user.\n *\n * @component\n * @example\n * const age = 21\n * const name = 'Jitendra Nirnejak'\n * return (\n *   <User age={age} name={name} />\n * )\n */\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [progress, setProgress] = useState(1);\n  const [status, setStatus] = useState('inicio');\n\n  return (\n    <Box\n      width={'100vw'}\n      height={'100vh'}\n      style={{ backgroundColor: '#EEEEEE' }}\n    >\n      <DataContext.Provider value={{ setData, setProgress, setStatus }}>\n        <AppBar />\n        <Forms data={data} />\n        <ProgressBar progress={progress} status={status} />\n        <Tables data={data} />\n      </DataContext.Provider>\n    </Box>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}