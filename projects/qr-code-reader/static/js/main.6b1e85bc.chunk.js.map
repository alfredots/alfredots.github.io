{"version":3,"sources":["components/AppBar.js","components/DataContext.js","utils/chunkedArray.js","controllers/PhotoController.js","components/SearchImageButton.js","controllers/ZipController.js","components/DetectedPhotoButton.js","components/RejectedPhotoButton.js","controllers/ReportController.js","components/ReportButton.js","layout/Forms.js","layout/ProgressBar.js","layout/Tables.js","App.js","serviceWorker.js","index.js"],"names":["AppBar","position","Toolbar","Typography","variant","DataContext","createContext","array","i","j","temparray","newArrays","length","slice","push","createData","name","link","data","imgUrl","process","timestamp","Date","getTime","readFileAsync","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsDataURL","convertFile","a","options","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","img","Image","src","URL","createObjectURL","jimp","read","threshold","max","console","log","getQRCode","imageData","BrowserQRCodeReader","decodeFromImageUrl","text","setReportStatus","useContext","setData","setProgress","setStatus","useEffect","totalProcessed","filter","value","totalNonProcessed","current","message","onChangeHandler","e","files","target","tempArray","chunkedFiles","chunkedArray","Array","from","fileProcessed","separatedFiles","prevData","Button","color","component","id","type","hidden","multiple","onChange","zipPhotos","zipName","datas","processValue","zip","JSZip","d","b64","index","indexOf","substring","base64","generateAsync","then","content","today","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","hour","getHours","minutes","getMinutes","seconds","getSeconds","saveAs","reportStatus","onClickHandler","error","disabled","onClick","mountJSON","links","nome","generateCSV","json2csv","err","csv","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","useStyles","makeStyles","root","height","createFormContainer","Grid","item","xs","container","justify","alignItems","classes","useState","className","SearchImageButton","DetectedPhotoButton","RejectedPhotoButton","ReportButton","theme","width","marginLeft","spacing","marginBottom","progress","status","setText","LinearProgress","paper","table","overflowX","tableLayout","tableCell","wordBreak","TableContainer","Paper","elevation","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","App","Box","style","backgroundColor","Provider","Forms","ProgressBar","Tables","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","href","origin","addEventListener","fetch","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6b1e85bc.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport { Toolbar, Typography } from '@material-ui/core';\n\nexport default function () {\n  return (\n    <AppBar position='static'>\n      <Toolbar>\n        <Typography variant='h6'>Leitor de QR Codes</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import { createContext } from 'react';\n\nconst DataContext = createContext();\n\nexport default DataContext;\n","export default function (array) {\n  var newArrays = [];\n  var i,\n    j,\n    temparray,\n    chunk = 10;\n  for (i = 0, j = array.length; i < j; i += chunk) {\n    temparray = array.slice(i, i + chunk);\n    newArrays.push(temparray);\n  }\n  return newArrays;\n}\n","import imageCompression from 'browser-image-compression';\nimport { BrowserQRCodeReader } from '@zxing/library';\nimport jimp from 'jimp';\n\nfunction createData(name, link = '', data, imgUrl, process = false) {\n  return { name, link, data, imgUrl, process, timestamp: new Date().getTime() };\n}\n\nfunction readFileAsync(file) {\n  return new Promise((resolve, reject) => {\n    let reader = new FileReader();\n\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n\n    reader.onerror = reject;\n\n    reader.readAsDataURL(file);\n  });\n}\n\nexport async function convertFile(file) {\n  try {\n    const options = {\n      maxSizeMB: 1,\n      maxWidthOrHeight: 1024,\n      useWebWorker: true,\n    };\n    const compressedFile = await imageCompression(file, options);\n    let img = new Image();\n    img.src = URL.createObjectURL(compressedFile);\n    //\n    const image = await jimp.read(img.src);\n    image.threshold({ max: 150 });\n    //montar data\n    const data = await readFileAsync(compressedFile);\n\n    //\n    return createData(file.name, '', data, img);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getQRCode(imageData) {\n  const reader = new BrowserQRCodeReader();\n  try {\n    return await (await reader.decodeFromImageUrl(imageData.imgUrl.src)).text;\n  } catch (error) {\n    console.log(error);\n  }\n  return 'Não detectado';\n}\n","import React, { useContext, useEffect } from 'react';\nimport { Button } from '@material-ui/core';\nimport chunkedArray from '../utils/chunkedArray';\nimport { getQRCode, convertFile } from '../controllers/PhotoController';\nimport DataContext from './DataContext';\n\nexport default function ({ setReportStatus, data }) {\n  const { setData, setProgress, setStatus } = useContext(DataContext);\n\n  useEffect(() => {\n    if (data.length !== 0) {\n      console.log('aaaaa');\n      const totalProcessed = data.filter((value) => value.process);\n      const totalNonProcessed = data.filter((value) => !value.process);\n\n      setStatus({\n        current: 'finish',\n        message: `Finalizado - Total:${data.length} - Detectadas: ${totalProcessed.length} - Não-detectadas: ${totalNonProcessed.length}`,\n      });\n    }\n  }, [data, setStatus]);\n\n  const onChangeHandler = async (e) => {\n    const files = e.target.files;\n    if (files.length > 0 && files.length <= 2000) {\n      const tempArray = [];\n      const chunkedFiles = chunkedArray(Array.from(files));\n      let fileProcessed = 0;\n      for (let separatedFiles of chunkedFiles) {\n        for (let file of separatedFiles) {\n          //converter tipo File para o formato imageData\n          let imageData = await convertFile(file);\n          //detectando o link do qrCode\n          imageData.link = await getQRCode(imageData);\n          //\n          if (imageData.link !== 'Não detectado') {\n            imageData.process = true;\n          }\n          //Salvando dado\n          tempArray.push(imageData);\n          fileProcessed++;\n          setProgress((fileProcessed / files.length) * 100);\n          setStatus({\n            current: 'processing',\n            message: `Processando imagem e detectando qr code (${fileProcessed}/${files.length})`,\n          });\n        }\n      }\n      setData((prevData) => [...prevData, ...tempArray]);\n\n      setReportStatus(false);\n    } else if (files.length >= 1500) {\n      setStatus({\n        current: 'maxPhoto',\n        message: 'Erro - ultrapassou máximo de fotos',\n      });\n    } else {\n      setStatus('Erro - nenhuma foto informada');\n    }\n  };\n\n  return (\n    <Button variant='contained' color='primary' component='label'>\n      Buscar imagens\n      <input\n        id='file-input'\n        type='file'\n        hidden\n        multiple\n        onChange={(e) => onChangeHandler(e)}\n      />\n    </Button>\n  );\n}\n","import JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\n\nexport function zipPhotos(zipName, datas, processValue) {\n  const zip = new JSZip();\n\n  for (let d of datas) {\n    if (d.process === processValue) {\n      let b64 = d.data;\n      let index = b64.indexOf(',');\n      if (index !== -1) {\n        b64 = b64.substring(index + 1, b64.length);\n      }\n      zip.file(d.name, b64, { base64: true });\n    }\n  }\n\n  zip.generateAsync({ type: 'blob' }).then(function (content) {\n    console.log(content);\n    // see FileSaver.js\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = today.getFullYear();\n    var hour = String(today.getHours());\n    var minutes = String(today.getMinutes());\n    var seconds = String(today.getSeconds());\n\n    today =\n      dd + '-' + mm + '-' + yyyy + '-' + hour + ':' + minutes + ':' + seconds;\n    saveAs(content, `${zipName}-${today}.zip`);\n  });\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { zipPhotos } from '../controllers/ZipController';\n\nexport default function ({ data, reportStatus }) {\n  const onClickHandler = async (e) => {\n    try {\n      if (data.length > 0) {\n        zipPhotos('fotos-detectadas', data, true);\n      } else {\n        console.log('data vazio');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Button\n      variant='contained'\n      color='primary'\n      disabled={reportStatus}\n      onClick={(e) => onClickHandler(e)}\n    >\n      Fotos detectadas\n    </Button>\n  );\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { zipPhotos } from '../controllers/ZipController';\n\nexport default function ({ data, reportStatus }) {\n  const onClickHandler = async (e) => {\n    try {\n      if (data.length > 0) {\n        zipPhotos('fotos-nao-detectadas', data, false);\n      } else {\n        console.log('data vazio');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Button\n      variant='contained'\n      color='primary'\n      disabled={reportStatus}\n      onClick={(e) => onClickHandler(e)}\n    >\n      Fotos não detectadas\n    </Button>\n  );\n}\n","import { json2csv } from 'json-2-csv';\n\nexport function mountJSON(data) {\n  const links = [];\n  for (let d of data) {\n    if (d.process) {\n      links.push({\n        link: d.link,\n        nome: d.name,\n        data: d.timestamp,\n      });\n    }\n  }\n  return links;\n}\n\nfunction downloadFile(fileName, urlData) {\n  var aLink = document.createElement('a');\n  var evt = document.createEvent('HTMLEvents');\n  evt.initEvent('click');\n  aLink.download = fileName;\n  aLink.href = urlData;\n  window.location.href = urlData;\n  aLink.dispatchEvent(evt);\n}\n\nexport async function generateCSV(data) {\n  try {\n    json2csv(data, (err, csv) => {\n      console.log(csv);\n      var link = document.createElement('a');\n      link.setAttribute(\n        'href',\n        'data:text/csv;charset=UTF-8,' + encodeURIComponent(csv),\n      );\n      //\n      var today = new Date();\n      var dd = String(today.getDate()).padStart(2, '0');\n      var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n      var yyyy = today.getFullYear();\n      var hour = String(today.getHours());\n      var minutes = String(today.getMinutes());\n      var seconds = String(today.getSeconds());\n\n      today =\n        dd + '-' + mm + '-' + yyyy + '-' + hour + ':' + minutes + ':' + seconds;\n      //\n      link.setAttribute('download', `relatorio-${today}.csv`);\n      document.body.appendChild(link);\n\n      link.click();\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { mountJSON, generateCSV } from '../controllers/ReportController';\n\nexport default function ({ data, reportStatus }) {\n  const onClickHandler = async (e) => {\n    try {\n      if (data.length > 0) {\n        const jsonData = mountJSON(data);\n        generateCSV(jsonData);\n      } else {\n        console.log('data vazio');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Button\n      variant='contained'\n      color='primary'\n      disabled={reportStatus}\n      onClick={(e) => onClickHandler(e)}\n    >\n      Baixar relatório\n    </Button>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport { Button, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport DataContext from '../components/DataContext';\nimport SearchImageButton from '../components/SearchImageButton';\nimport DetectedPhotoButton from '../components/DetectedPhotoButton';\nimport RejectedPhotoButton from '../components/RejectedPhotoButton';\nimport ReportButton from '../components/ReportButton';\n\nconst useStyles = makeStyles({\n  root: {\n    height: '20%',\n  },\n});\n\nfunction createFormContainer(content) {\n  return (\n    <Grid item xs={3} container justify='center' alignItems='center'>\n      {content}\n    </Grid>\n  );\n}\n\nexport default function ({ data }) {\n  const classes = useStyles();\n  const [reportStatus, setReportStatus] = useState(true);\n\n  return (\n    <Grid container className={classes.root}>\n      {createFormContainer(\n        <SearchImageButton data={data} setReportStatus={setReportStatus} />,\n      )}\n      {createFormContainer(\n        <DetectedPhotoButton data={data} reportStatus={reportStatus} />,\n      )}\n      {createFormContainer(\n        <RejectedPhotoButton data={data} reportStatus={reportStatus} />,\n      )}\n      {createFormContainer(\n        <ReportButton data={data} reportStatus={reportStatus} />,\n      )}\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: '8%',\n    marginLeft: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  text: {\n    width: '35rem',\n  },\n}));\n\nfunction setText(status) {\n  return status.message;\n}\n\nexport default function ({ progress, status }) {\n  const classes = useStyles();\n  return (\n    <Grid\n      className={classes.root}\n      container\n      justify='center'\n      alignItems='center'\n      xs={6}\n    >\n      <Grid item xs={10}>\n        <Typography className={classes.text}>{setText(status)}</Typography>\n      </Grid>\n      <Grid item xs={10}>\n        <LinearProgress variant='determinate' value={progress} />\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\n//import TablePagination from '@material-ui/core/TablePagination';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  paper: {\n    width: '90%',\n    height: '55vh',\n  },\n  table: {\n    width: '100%',\n    overflowX: 'hidden',\n    tableLayout: 'fixed',\n  },\n  tableCell: {\n    wordBreak: 'break-all',\n  },\n});\n\nexport default function ({ data }) {\n  const classes = useStyles();\n\n  return (\n    <Grid container justify='center' alignItems='center'>\n      <TableContainer component={Paper} className={classes.paper} elevation={3}>\n        <Table className={classes.table} aria-label='simple table'>\n          <TableHead>\n            <TableRow>\n              <TableCell className={classes.tableCell}>Id</TableCell>\n              <TableCell className={classes.tableCell}>\n                Nome do Arquivo\n              </TableCell>\n              <TableCell align='center'>Link encontrado</TableCell>\n              <TableCell align='center'>Processado</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row, index) => (\n              <TableRow key={row.name}>\n                <TableCell\n                  component='th'\n                  scope='row'\n                  className={classes.tableCell}\n                >\n                  {index + 1}\n                </TableCell>\n                <TableCell\n                  component='th'\n                  scope='row'\n                  className={classes.tableCell}\n                >\n                  {row.name}\n                </TableCell>\n                <TableCell align='center' className={classes.tableCell}>\n                  {row.link}\n                </TableCell>\n                <TableCell align='center' className={classes.tableCell}>\n                  {row.process ? 'detectado' : 'não detectado'}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Grid>\n  );\n}\n","import React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport AppBar from './components/AppBar';\nimport Forms from './layout/Forms';\nimport ProgressBar from './layout/ProgressBar';\nimport Tables from './layout/Tables';\nimport DataContext from './components/DataContext';\n/**\n * Component for showing details of the user.\n *\n * @component\n * @example\n * const age = 21\n * const name = 'Jitendra Nirnejak'\n * return (\n *   <User age={age} name={name} />\n * )\n */\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [progress, setProgress] = useState(1);\n  const [status, setStatus] = useState({\n    current: 'init',\n    message: 'Progresso da detecção do QR code',\n  });\n\n  return (\n    <Box\n      width={'100vw'}\n      height={'100vh'}\n      style={{ backgroundColor: '#EEEEEE' }}\n    >\n      <DataContext.Provider value={{ data, setData, setProgress, setStatus }}>\n        <AppBar />\n        <Forms data={data} />\n        <ProgressBar progress={progress} status={status} />\n        <Tables data={data} />\n      </DataContext.Provider>\n    </Box>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}